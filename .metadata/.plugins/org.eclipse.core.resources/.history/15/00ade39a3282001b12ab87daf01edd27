package Student;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class OracleTest {

	public static void main(String[] args) throws IOException{
		// TODO Auto-generated method stub
		Connection conn = null; // DB연결된 상태(세션)을 담은 객체
		PreparedStatement pstm = null; // SQL 문을 나타내는 객체
		ResultSet rs = null; // 쿼리문을 날린것에 대한 반환값을 담을 객체
		
		try {
			// SQL 문장을 만들고 만약 문장이 질의어(SELECT문)라면
			// 그 결과를 담을 ResulSet 객체를 준비한 후 실행시킨다.
			String quary = "SELECT * FROM STUDENT";

			conn = DBConnection.getConnection();
			pstm = conn.prepareStatement(quary);
			rs = pstm.executeQuery();

			System.out.println("STUDENTNO  NAME  PHONENUMBER  CITY  DEPARTMENT");
			System.out.println("==============================================");

			while (rs.next()) {
				int studentno = rs.getInt(1);
				String name = rs.getString(2);
				String phonenumber = rs.getString(3);
				String city = rs.getString(4);
				String department = rs.getString(5);

				String result = studentno + "   " + name + "       " + phonenumber + "  " + city + "      "
						+ department;
				System.out.println(result);
			}

		} catch (SQLException sqle) {
			System.out.println("SELECT문에서 예외 발생");
			sqle.printStackTrace();

		} finally {
			// DB 연결을 종료한다.
			try {
				if (rs != null) {
					rs.close();
				}
				if (pstm != null) {
					pstm.close();
				}
				if (conn != null) {
					conn.close();
				}
			} catch (Exception e) {
				throw new RuntimeException(e.getMessage());
			}
		}
		System.out.println();
		System.out.println();
		System.out.println();
		while(true){					
			System.out.println("원하는 작업을 선택하세요. 1.조회   2.수정   3.입력  4.삭제  5.종료");
			Scanner scan = new Scanner(System.in);
			int menu = scan.nextInt();
//			scan.close();
			
			if(menu == 1)
			{
				CallProcedure1 pro1 = new CallProcedure1();
				pro1.do1();
			}
			if(menu == 2)
			{
				CallProcedure2 pro2 = new CallProcedure2();
				pro2.do2();
			}
			if(menu == 3)
			{
				CallProcedure3 pro3 = new CallProcedure3();
				pro3.do3();
			}
			if(menu == 4)
			{
				CallProcedure4 pro4 = new CallProcedure4();
				pro4.do4();
			}
		}
		
	
	}
}
